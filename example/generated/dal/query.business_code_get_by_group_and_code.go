// DO NOT EDIT THIS FILE, IT IS GENERATED BY DALC
package dal

import (
	"context"
	"database/sql"
	"github.com/pharosnet/dalc/v2"
)

// ************* business_code_get_by_group_and_code *************
const businessCodeGetByGroupAndCodeSQL = "SELECT `business_code`.`id`, `business_code`.`create_by`, `business_code`.`create_at`, `business_code`.`modify_by`, `business_code`.`modify_at`, `business_code`.`delete_by`, `business_code`.`delete_at`, `business_code`.`version`, `business_code`.`code`, `business_code`.`group`, `business_code`.`description`, `business_code`.`text_code` FROM `applications`.`business_code` WHERE `group` = ? AND `code` = ? "

type BusinessCodeGetByGroupAndCodeRequest struct {
	Group string
	Code  string
}

type BusinessCodeGetByGroupAndCodeResultIterator func(ctx context.Context, result *BusinessCodeRow) (err error)

func BusinessCodeGetByGroupAndCode(ctx dalc.PreparedContext, request *BusinessCodeGetByGroupAndCodeRequest, iterator BusinessCodeGetByGroupAndCodeResultIterator) (err error) {

	querySQL := businessCodeGetByGroupAndCodeSQL
	args := dalc.NewArgs()
	args.Arg(request.Group)
	args.Arg(request.Code)

	err = dalc.Query(ctx, querySQL, args, func(ctx context.Context, rows *sql.Rows, rowErr error) (err error) {

		if rowErr != nil {
			err = rowErr
			return
		}

		result := &BusinessCodeRow{}
		scanErr := result.scanSQLRow(rows)

		if scanErr != nil {
			err = scanErr
			return
		}

		err = iterator(ctx, result)

		return
	})

	return
}
